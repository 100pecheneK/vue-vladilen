{"version":3,"file":"js/444.3bb5e6f3.js","mappings":"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","sources":["webpack://14-practice/./src/views/AuthView.vue","webpack://14-practice/./src/hooks/login-form.js","webpack://14-practice/./src/views/AuthView.vue?ce05"],"sourcesContent":["<template>\n\t<form class=\"card\" @submit.prevent=\"onSubmit\">\n\t\t<h1>Войти в систему</h1>\n\t\t<div :class=\"['form-control', {invalid: emailError}]\">\n\t\t\t<label for=\"email\">Email</label>\n\t\t\t<input\n\t\t\t\ttype=\"email\"\n\t\t\t\tid=\"email\"\n\t\t\t\tautocomplete=\"email\"\n\t\t\t\tv-model=\"email\"\n\t\t\t\t@blur=\"emailBlur\"\n\t\t\t/>\n\t\t\t<small v-if=\"emailError\">{{ emailError }}</small>\n\t\t</div>\n\t\t<div :class=\"['form-control', {invalid: passwordError}]\">\n\t\t\t<label for=\"password\">Password {{ password?.length || '' }}</label>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tid=\"password\"\n\t\t\t\tautocomplete=\"current-password\"\n\t\t\t\tv-model=\"password\"\n\t\t\t\t@blur=\"passwordBlur\"\n\t\t\t/>\n\t\t\t<small v-if=\"passwordError\">{{ passwordError }}</small>\n\t\t</div>\n\t\t<button class=\"btn primary\" :disabled=\"isSubmitting || isToManyAttemts\">\n\t\t\tВойти\n\t\t</button>\n\t\t<div class=\"text-danger\" v-if=\"isToManyAttemts\">Слишком много попыток</div>\n\t</form>\n</template>\n\n<script>\nimport {MESSAGE_TYPES} from '@/types/message'\nimport {useRoute} from 'vue-router'\nimport {useStore} from 'vuex'\nimport {useLoginForm} from '../hooks'\nimport {error} from '../utils/error'\n\nexport default {\n\tsetup() {\n\t\tconst route = useRoute()\n\t\tconst store = useStore()\n\n\t\tif (route.query.message) {\n\t\t\tstore.dispatch('message/setMessage', {\n\t\t\t\tvalue: error(route.query.message),\n\t\t\t\ttype: MESSAGE_TYPES.WARNING,\n\t\t\t})\n\t\t}\n\t\treturn {...useLoginForm()}\n\t},\n}\n</script>\n","import {computed, watch} from 'vue'\nimport * as yup from 'yup'\nimport {useField, useForm} from 'vee-validate'\nimport {useStore} from 'vuex'\nimport {useRouter} from 'vue-router'\n\nexport function useLoginForm() {\n\tconst store = useStore()\n\tconst router = useRouter()\n\tconst {handleSubmit, isSubmitting, submitCount} = useForm()\n\n\tconst {\n\t\tvalue: email,\n\t\terrorMessage: emailError,\n\t\thandleBlur: emailBlur,\n\t} = useField(\n\t\t'email',\n\t\tyup\n\t\t\t.string()\n\t\t\t.trim()\n\t\t\t.required('Пожалуйста, введите почту')\n\t\t\t.email('Это не почта'),\n\t)\n\tconst MIN_PASSW_LEN = 6\n\tconst {\n\t\tvalue: password,\n\t\terrorMessage: passwordError,\n\t\thandleBlur: passwordBlur,\n\t} = useField(\n\t\t'password',\n\t\tyup\n\t\t\t.string()\n\t\t\t.trim()\n\t\t\t.required('Пожалуйста, введите пароль')\n\t\t\t.min(\n\t\t\t\tMIN_PASSW_LEN,\n\t\t\t\t`Пароль не может быть меньше ${MIN_PASSW_LEN} символов`,\n\t\t\t),\n\t)\n\n\tconst isToManyAttemts = computed(() => submitCount.value >= 3)\n\tconst onSubmit = handleSubmit(async (values) => {\n\t\ttry {\n\t\t\tawait store.dispatch('auth/login', values)\n\t\t\trouter.push('/')\n\t\t} catch (e) {\n\t\t\tconsole.log()\n\t\t}\n\t})\n\n\twatch(isToManyAttemts, (val) => {\n\t\tif (val) {\n\t\t\tsetTimeout(() => (submitCount.value = 0), 1500)\n\t\t}\n\t})\n\treturn {\n\t\temail,\n\t\temailError,\n\t\temailBlur,\n\t\tpassword,\n\t\tpasswordError,\n\t\tpasswordBlur,\n\t\tonSubmit,\n\t\tisSubmitting,\n\t\tisToManyAttemts,\n\t}\n}\n","import { render } from \"./AuthView.vue?vue&type=template&id=0ab71de9\"\nimport script from \"./AuthView.vue?vue&type=script&lang=js\"\nexport * from \"./AuthView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/misha/Documents/GitHub/vue/14-practice/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","for","class","_createElementBlock","onSubmit","_ctx","_hoisted_1","invalid","_hoisted_2","type","id","autocomplete","$event","onBlur","_hoisted_3","_toDisplayString","length","_hoisted_5","disabled","_hoisted_6","useLoginForm","store","useStore","router","useRouter","handleSubmit","isSubmitting","submitCount","useForm","value","email","errorMessage","emailError","handleBlur","emailBlur","useField","yup","trim","required","MIN_PASSW_LEN","password","passwordError","passwordBlur","min","isToManyAttemts","computed","async","dispatch","values","push","e","console","log","watch","val","setTimeout","setup","route","useRoute","query","message","error","MESSAGE_TYPES","__exports__","render"],"sourceRoot":""}